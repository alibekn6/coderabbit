"""initial_migration_all_tables

Revision ID: 1db4860d779d
Revises: 
Create Date: 2025-10-17 12:11:37.822941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1db4860d779d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cache_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_type', sa.String(length=50), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('next_update_scheduled', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_updating', sa.Boolean(), nullable=False),
    sa.Column('total_records', sa.Integer(), nullable=False),
    sa.Column('update_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cache_metadata_cache_type'), 'cache_metadata', ['cache_type'], unique=True)
    op.create_index(op.f('ix_cache_metadata_id'), 'cache_metadata', ['id'], unique=False)
    op.create_table('cached_notion_projects',
    sa.Column('page_id', sa.String(length=100), nullable=False),
    sa.Column('project_name', sa.String(length=255), nullable=False),
    sa.Column('health_status', sa.String(length=50), nullable=True),
    sa.Column('health_color', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('priority_color', sa.String(length=50), nullable=True),
    sa.Column('assignees', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('task_count', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('notion_created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notion_last_edited_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('cached_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('page_id')
    )
    op.create_index(op.f('ix_cached_notion_projects_page_id'), 'cached_notion_projects', ['page_id'], unique=False)
    op.create_table('cached_notion_tasks',
    sa.Column('page_id', sa.String(length=100), nullable=False),
    sa.Column('task_name', sa.String(length=500), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('effort_level', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.String(length=100), nullable=True),
    sa.Column('task_type', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('assignee', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('notion_created_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notion_last_edited_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('cached_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('page_id')
    )
    op.create_index(op.f('ix_cached_notion_tasks_page_id'), 'cached_notion_tasks', ['page_id'], unique=False)
    op.create_index(op.f('ix_cached_notion_tasks_status'), 'cached_notion_tasks', ['status'], unique=False)
    op.create_table('cached_notion_todos',
    sa.Column('todo_id', sa.String(length=100), nullable=False),
    sa.Column('member_name', sa.String(length=255), nullable=False),
    sa.Column('task_name', sa.String(length=500), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('deadline', sa.String(length=100), nullable=True),
    sa.Column('date_done', sa.String(length=100), nullable=True),
    sa.Column('is_overdue', sa.Boolean(), nullable=False),
    sa.Column('project_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('cached_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('todo_id')
    )
    op.create_index(op.f('ix_cached_notion_todos_is_overdue'), 'cached_notion_todos', ['is_overdue'], unique=False)
    op.create_index(op.f('ix_cached_notion_todos_member_name'), 'cached_notion_todos', ['member_name'], unique=False)
    op.create_index(op.f('ix_cached_notion_todos_status'), 'cached_notion_todos', ['status'], unique=False)
    op.create_index(op.f('ix_cached_notion_todos_todo_id'), 'cached_notion_todos', ['todo_id'], unique=False)
    op.create_table('cached_team_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_name', sa.String(length=255), nullable=False),
    sa.Column('position', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('tg_id', sa.String(length=100), nullable=True),
    sa.Column('start_date', sa.String(length=100), nullable=True),
    sa.Column('cached_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cached_team_members_id'), 'cached_team_members', ['id'], unique=False)
    op.create_index(op.f('ix_cached_team_members_member_name'), 'cached_team_members', ['member_name'], unique=True)
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notion_id', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('telegram_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_persons_email'), 'persons', ['email'], unique=True)
    op.create_index(op.f('ix_persons_id'), 'persons', ['id'], unique=False)
    op.create_index(op.f('ix_persons_notion_id'), 'persons', ['notion_id'], unique=True)
    op.create_index(op.f('ix_persons_telegram_id'), 'persons', ['telegram_id'], unique=True)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    op.create_table('registration_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_tokens_id'), 'registration_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_registration_tokens_token'), 'registration_tokens', ['token'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('activity_summaries',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('conversations_created', sa.Integer(), nullable=False),
    sa.Column('tasks_completed', sa.Integer(), nullable=False),
    sa.Column('total_activity_score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('person_id', 'date')
    )
    op.create_index('ix_activity_date', 'activity_summaries', ['date'], unique=False)
    op.create_index('ix_activity_score', 'activity_summaries', ['total_activity_score'], unique=False)
    op.create_table('conversation_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('notion_conversation_id', sa.String(length=100), nullable=False),
    sa.Column('conversation_title', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notion_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_activities_created_at'), 'conversation_activities', ['created_at'], unique=False)
    op.create_index(op.f('ix_conversation_activities_id'), 'conversation_activities', ['id'], unique=False)
    op.create_index(op.f('ix_conversation_activities_notion_conversation_id'), 'conversation_activities', ['notion_conversation_id'], unique=False)
    op.create_index('ix_conversation_notion_id_person', 'conversation_activities', ['notion_conversation_id', 'person_id'], unique=True)
    op.create_index('ix_conversation_person_created', 'conversation_activities', ['person_id', 'created_at'], unique=False)
    op.create_table('task_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('notion_task_id', sa.String(length=100), nullable=False),
    sa.Column('task_title', sa.String(length=500), nullable=True),
    sa.Column('project_name', sa.String(length=255), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_status_change', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notion_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_activities_completed_at'), 'task_activities', ['completed_at'], unique=False)
    op.create_index(op.f('ix_task_activities_id'), 'task_activities', ['id'], unique=False)
    op.create_index(op.f('ix_task_activities_notion_task_id'), 'task_activities', ['notion_task_id'], unique=True)
    op.create_index('ix_task_person_completed', 'task_activities', ['person_id', 'completed_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_task_person_completed', table_name='task_activities')
    op.drop_index(op.f('ix_task_activities_notion_task_id'), table_name='task_activities')
    op.drop_index(op.f('ix_task_activities_id'), table_name='task_activities')
    op.drop_index(op.f('ix_task_activities_completed_at'), table_name='task_activities')
    op.drop_table('task_activities')
    op.drop_index('ix_conversation_person_created', table_name='conversation_activities')
    op.drop_index('ix_conversation_notion_id_person', table_name='conversation_activities')
    op.drop_index(op.f('ix_conversation_activities_notion_conversation_id'), table_name='conversation_activities')
    op.drop_index(op.f('ix_conversation_activities_id'), table_name='conversation_activities')
    op.drop_index(op.f('ix_conversation_activities_created_at'), table_name='conversation_activities')
    op.drop_table('conversation_activities')
    op.drop_index('ix_activity_score', table_name='activity_summaries')
    op.drop_index('ix_activity_date', table_name='activity_summaries')
    op.drop_table('activity_summaries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_registration_tokens_token'), table_name='registration_tokens')
    op.drop_index(op.f('ix_registration_tokens_id'), table_name='registration_tokens')
    op.drop_table('registration_tokens')
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_persons_telegram_id'), table_name='persons')
    op.drop_index(op.f('ix_persons_notion_id'), table_name='persons')
    op.drop_index(op.f('ix_persons_id'), table_name='persons')
    op.drop_index(op.f('ix_persons_email'), table_name='persons')
    op.drop_table('persons')
    op.drop_index(op.f('ix_cached_team_members_member_name'), table_name='cached_team_members')
    op.drop_index(op.f('ix_cached_team_members_id'), table_name='cached_team_members')
    op.drop_table('cached_team_members')
    op.drop_index(op.f('ix_cached_notion_todos_todo_id'), table_name='cached_notion_todos')
    op.drop_index(op.f('ix_cached_notion_todos_status'), table_name='cached_notion_todos')
    op.drop_index(op.f('ix_cached_notion_todos_member_name'), table_name='cached_notion_todos')
    op.drop_index(op.f('ix_cached_notion_todos_is_overdue'), table_name='cached_notion_todos')
    op.drop_table('cached_notion_todos')
    op.drop_index(op.f('ix_cached_notion_tasks_status'), table_name='cached_notion_tasks')
    op.drop_index(op.f('ix_cached_notion_tasks_page_id'), table_name='cached_notion_tasks')
    op.drop_table('cached_notion_tasks')
    op.drop_index(op.f('ix_cached_notion_projects_page_id'), table_name='cached_notion_projects')
    op.drop_table('cached_notion_projects')
    op.drop_index(op.f('ix_cache_metadata_id'), table_name='cache_metadata')
    op.drop_index(op.f('ix_cache_metadata_cache_type'), table_name='cache_metadata')
    op.drop_table('cache_metadata')
    # ### end Alembic commands ###
